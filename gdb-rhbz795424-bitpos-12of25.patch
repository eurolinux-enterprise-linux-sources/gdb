From 8314f8d6bb0c9ff33fa1b7af10d98cff44f19b27 Mon Sep 17 00:00:00 2001
From: siddhesh <siddhesh>
Date: Fri, 14 Sep 2012 12:46:55 +0000
Subject: [PATCH] 	* valarith.c (value_concat): Replace unsafe ALLOCA with
 	XMALLOC/XFREE.

---
 gdb/ChangeLog  |    5 +++++
 gdb/valarith.c |   12 ++++++++++--
 2 files changed, 15 insertions(+), 2 deletions(-)

Index: gdb-7.2/gdb/valarith.c
===================================================================
--- gdb-7.2.orig/gdb/valarith.c
+++ gdb-7.2/gdb/valarith.c
@@ -726,9 +726,12 @@ value_concat (struct value *arg1, struct
       if (TYPE_CODE (type2) == TYPE_CODE_STRING
 	  || TYPE_CODE (type2) == TYPE_CODE_CHAR)
 	{
+	  struct cleanup *back_to;
+
 	  count = longest_to_int (value_as_long (inval1));
 	  inval2len = TYPE_LENGTH (type2);
-	  ptr = (char *) alloca (count * inval2len);
+	  ptr = (char *) xmalloc (count * inval2len);
+	  back_to = make_cleanup (xfree, ptr);
 	  if (TYPE_CODE (type2) == TYPE_CODE_CHAR)
 	    {
 	      char_type = type2;
@@ -751,6 +754,7 @@ value_concat (struct value *arg1, struct
 		}
 	    }
 	  outval = value_string (ptr, count * inval2len, char_type);
+	  do_cleanups (back_to);
 	}
       else if (TYPE_CODE (type2) == TYPE_CODE_BITSTRING
 	       || TYPE_CODE (type2) == TYPE_CODE_BOOL)
@@ -765,6 +769,8 @@ value_concat (struct value *arg1, struct
   else if (TYPE_CODE (type1) == TYPE_CODE_STRING
 	   || TYPE_CODE (type1) == TYPE_CODE_CHAR)
     {
+      struct cleanup *back_to;
+
       /* We have two character strings to concatenate. */
       if (TYPE_CODE (type2) != TYPE_CODE_STRING
 	  && TYPE_CODE (type2) != TYPE_CODE_CHAR)
@@ -773,7 +779,8 @@ value_concat (struct value *arg1, struct
 	}
       inval1len = TYPE_LENGTH (type1);
       inval2len = TYPE_LENGTH (type2);
-      ptr = (char *) alloca (inval1len + inval2len);
+      ptr = (char *) xmalloc (inval1len + inval2len);
+      back_to = make_cleanup (xfree, ptr);
       if (TYPE_CODE (type1) == TYPE_CODE_CHAR)
 	{
 	  char_type = type1;
@@ -796,6 +803,7 @@ value_concat (struct value *arg1, struct
 	  memcpy (ptr + inval1len, value_contents (inval2), inval2len);
 	}
       outval = value_string (ptr, inval1len + inval2len, char_type);
+      do_cleanups (back_to);
     }
   else if (TYPE_CODE (type1) == TYPE_CODE_BITSTRING
 	   || TYPE_CODE (type1) == TYPE_CODE_BOOL)
