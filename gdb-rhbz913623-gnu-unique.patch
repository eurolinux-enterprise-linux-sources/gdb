From: Sergio Durigan Junior <sergiodj at redhat dot com>
To: Tom Tromey <tromey at redhat dot com>
Cc: GDB Patches <gdb-patches at sourceware dot org>, Keith Seitz <keiths at redhat dot com>
Subject: Re: [PATCH] Fix for PR c++/15203 and PR c++/15210
References: <m3a9qdnmti.fsf@redhat.com> <87wqtb9ht6.fsf@fleche.redhat.com>
Date: Thu, 14 Mar 2013 08:15:54 -0300
essage-ID: <m3obemgrkl.fsf@redhat.com>

On Wednesday, March 13 2013, Tom Tromey wrote:

> Sergio> +      else if (sym->flags & (BSF_GLOBAL | BSF_LOCAL | BSF_WEAK | BSF_GNU_UNIQUE))
>
> I think this line is too long.
>
> Sergio> +# Regression test for PR c++/15203 and PR c++/15210
> Sergio> +gdb_test "print 'gnu_obj_1::method()::sintvar'" "\\$\[0-9\]+ = 4" \
> Sergio> +	   "simple object, static const int, accessing via 'class::method::variable"
>
> I think the second line should only be indented 4 spaces.
>
> Ok with those changes.

Thanks, the patch below is what I have actually committed.

        http://sourceware.org/ml/gdb-cvs/2013-03/msg00130.html

-- 
Sergio

gdb/:
2013-03-14  Keith Seitz  <keiths@redhat.com>
	    Alan Matsuoka  <alanm@redhat.com>

	PR c++/15203
	PR c++/15210
	* cp-namespace.c (cp_lookup_nested_symbol): Handle TYPE_CODE_FUNC and
	TYPE_CODE_METHOD.
	* elfread.c (elf_symtab_read): Handle BSF_GNU_UNIQUE for certain
	symbols.

gdb/testsuite/:
2013-03-14  Sergio Durigan Junior  <sergiodj@redhat.com>

	PR c++/15203
	PR c++/15210
	* gdb.cp/m-static.cc (keepalive_int): New function.
	(gnu_obj_1::method): New variable `sintvar', call `keepalive_int'.
	* gdb.cp/m-static.exp: New test for `sintvar'.

Index: gdb/elfread.c
===================================================================
RCS file: /cvs/src/src/gdb/elfread.c,v
retrieving revision 1.148
diff -u -r1.148 elfread.c
--- a/gdb/elfread.c	6 Mar 2013 21:20:02 -0000	1.148
+++ b/gdb/elfread.c	14 Mar 2013 11:09:27 -0000
@@ -357,7 +357,8 @@
 	}
       else if (sym->flags & BSF_SECTION_SYM)
 	continue;
-      else if (sym->flags & (BSF_GLOBAL | BSF_LOCAL | BSF_WEAK))
+      else if (sym->flags & (BSF_GLOBAL | BSF_LOCAL | BSF_WEAK
+			     | BSF_GNU_UNIQUE))
 	{
 	  struct minimal_symbol *msym;
 
@@ -413,7 +414,7 @@
 	    }
 	  else if (sym->section->flags & SEC_CODE)
 	    {
-	      if (sym->flags & (BSF_GLOBAL | BSF_WEAK))
+	      if (sym->flags & (BSF_GLOBAL | BSF_WEAK | BSF_GNU_UNIQUE))
 		{
 		  if (sym->flags & BSF_GNU_INDIRECT_FUNCTION)
 		    ms_type = mst_text_gnu_ifunc;
@@ -443,7 +444,7 @@
 	    }
 	  else if (sym->section->flags & SEC_ALLOC)
 	    {
-	      if (sym->flags & (BSF_GLOBAL | BSF_WEAK))
+	      if (sym->flags & (BSF_GLOBAL | BSF_WEAK | BSF_GNU_UNIQUE))
 		{
 		  if (sym->section->flags & SEC_LOAD)
 		    {
Index: gdb-7.2/gdb/testsuite/gdb.cp/m-static.cc
===================================================================
--- gdb-7.2.orig/gdb/testsuite/gdb.cp/m-static.cc
+++ gdb-7.2/gdb/testsuite/gdb.cp/m-static.cc
@@ -1,6 +1,7 @@
 // 2002-05-13
 
 enum region { oriental, egyptian, greek, etruscan, roman };
+void keepalive_int (int *var) { }
 
 // Test one.
 class gnu_obj_1
@@ -18,7 +19,10 @@ public:
 
   long method ()
   {
+    static int sintvar = 4;
     static bool svar = true;
+
+    keepalive_int (&sintvar);
     return key2;
   }
 };
Index: gdb/testsuite/gdb.cp/m-static.exp
===================================================================
RCS file: /cvs/src/src/gdb/testsuite/gdb.cp/m-static.exp,v
retrieving revision 1.21
diff -u -r1.21 m-static.exp
--- a/gdb/testsuite/gdb.cp/m-static.exp	12 Feb 2013 20:27:36 -0000	1.21
+++ b/gdb/testsuite/gdb.cp/m-static.exp	14 Mar 2013 11:09:29 -0000
@@ -52,6 +52,11 @@
 
 # One.
 
+# simple object, static const int, accessing via 'class::method::variable'
+# Regression test for PR c++/15203 and PR c++/15210
+gdb_test "print 'gnu_obj_1::method()::sintvar'" "\\$\[0-9\]+ = 4" \
+    "simple object, static const int, accessing via 'class::method::variable"
+
 # simple object, static const bool
 gdb_test "print test1.test" "\\$\[0-9\]* = true" "simple object, static const bool"
 

