From 4ec2ded38f5946e4b66ccb5488328c56d395f8ed Mon Sep 17 00:00:00 2001
From: siddhesh <siddhesh>
Date: Fri, 6 Jul 2012 05:36:03 +0000
Subject: [PATCH]         * cp-valprint.c (cp_print_value): Replace potentially unsafe
         alloca with xmalloc/xfree.

---
 gdb/ChangeLog     |    6 ++++++
 gdb/cp-valprint.c |    9 ++++++---
 2 files changed, 12 insertions(+), 3 deletions(-)

2012-07-06  Siddhesh Poyarekar  <siddhesh@redhat.com>
	    Jan Kratochvil  <jan.kratochvil@redhat.com>

	* cp-valprint.c (cp_print_value): Replace potentially unsafe
	alloca with xmalloc/xfree.
 
Index: gdb-7.2/gdb/cp-valprint.c
===================================================================
--- gdb-7.2.orig/gdb/cp-valprint.c
+++ gdb-7.2/gdb/cp-valprint.c
@@ -491,8 +491,11 @@ cp_print_value (struct type *type, struc
 	      && ((boffset + offset) < 0
 		  || (boffset + offset) >= TYPE_LENGTH (real_type)))
 	    {
-	      /* FIXME (alloca): unsafe if baseclass is really really large. */
-	      gdb_byte *buf = alloca (TYPE_LENGTH (baseclass));
+	      gdb_byte *buf;
+	      struct cleanup *back_to;
+
+	      buf = xmalloc (TYPE_LENGTH (baseclass));
+	      back_to = make_cleanup (xfree, buf);
 
 	      base_valaddr = buf;
 	      if (target_read_memory (address + boffset, buf,
@@ -502,6 +505,7 @@ cp_print_value (struct type *type, struc
 	      thisoffset = 0;
 	      boffset = 0;
 	      thistype = baseclass;
+	      do_cleanups (back_to);
 	    }
 	  else
 	    base_valaddr = valaddr;
